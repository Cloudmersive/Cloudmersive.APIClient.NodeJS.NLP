/**
 * nlpapiv2
 * The powerful Natural Language Processing APIs (v2) let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudmersiveNlpApiClient);
  }
}(this, function(expect, CloudmersiveNlpApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudmersiveNlpApiClient.PosTaggerApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PosTaggerApi', function() {
    describe('posTaggerTagAdjectives', function() {
      it('should call posTaggerTagAdjectives successfully', function(done) {
        //uncomment below and update the code to test posTaggerTagAdjectives
        //instance.posTaggerTagAdjectives(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('posTaggerTagAdverbs', function() {
      it('should call posTaggerTagAdverbs successfully', function(done) {
        //uncomment below and update the code to test posTaggerTagAdverbs
        //instance.posTaggerTagAdverbs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('posTaggerTagNouns', function() {
      it('should call posTaggerTagNouns successfully', function(done) {
        //uncomment below and update the code to test posTaggerTagNouns
        //instance.posTaggerTagNouns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('posTaggerTagPronouns', function() {
      it('should call posTaggerTagPronouns successfully', function(done) {
        //uncomment below and update the code to test posTaggerTagPronouns
        //instance.posTaggerTagPronouns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('posTaggerTagSentence', function() {
      it('should call posTaggerTagSentence successfully', function(done) {
        //uncomment below and update the code to test posTaggerTagSentence
        //instance.posTaggerTagSentence(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('posTaggerTagVerbs', function() {
      it('should call posTaggerTagVerbs successfully', function(done) {
        //uncomment below and update the code to test posTaggerTagVerbs
        //instance.posTaggerTagVerbs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
